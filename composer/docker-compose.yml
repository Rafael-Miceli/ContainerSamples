version: '3.4'

services:

  app-api:
    image: app-api
    build: ..\app-api\
    ports:
      - "5666:80"
    networks:
      - my-stack

  app-clients-processor:
    image: app-clients-processor
    build: ..\app-clients-processor\
    ports:
      - "5667:80"
    environment:
      - RABBIT__HOST=queue-clients-to-process
    networks:
      - my-stack

  app-clients-searcher:
    image: app-clients-searcher
    build: ..\app-clients-searcher\
    ports:
      - "5668:80"
    environment:
      - RABBIT__HOST=queue-clients-to-process
    networks:
      - my-stack
  
  app-front:
    image: app-front
    build: ..\app-front\
    ports:
      - "5101:80"
    entrypoint:
      ["./startup.sh"]
    stdin_open: true
    tty: true
    networks:
      - my-stack

  database-clients:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=123
    ports:
      - "3306:3306"
    networks:
      - my-stack
  
  database-processed-clients:
    image: dwmkerr/dynamodb
    ports:
      - "8010:8010"
    command: -sharedDb
    networks:
      - my-stack
  
  queue-clients-to-process:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "8072:15672"
    hostname: my-rabbit
    networks:
      - my-stack

  localstack:
    image: localstack/localstack
    container_name: localstack-s3
    ports:
      - "4567-4593:4567-4593"
      - "8080:8080"
    environment:
      - SERVICES=s3:4572
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - localstack-data:/tmp/localstack

volumes:
  localstack-data:
    name: localstack-data

networks:
  my-stack:
  # docker-compose up --build

  

  

  
